@aubergine: #7f545c;
@white: #fff;

@outside-padding: 36px;
@grid: 68px;
@innerPadding: @grid / 4;

.cols (@num) {
  width: @num * @grid;
}
.rows (@num) {
  height: @num * @grid;
}

.top (@num) {
  top: @outside-padding + @num * @grid;
}

.left (@num) {
  left: @outside-padding + @num * @grid;
}
.right (@num) {
  right: @outside-padding + @num * @grid;
}

.scrollable {
  overflow: scroll;
  -webkit-overflow-scrolling: touch;
}


@font-face {
    font-family: 'Diktator';
    src: url('./weissenseediktatorsemibold-webfont.woff2') format('woff2'),
         url('./weissenseediktatorsemibold-webfont.woff') format('woff');
    font-weight: 400;
    font-style: normal;
}

// @font-face {
//     font-family: 'Diktator';
//     src: url('./weissenseediktatorlight-webfont.woff2') format('woff2'),
//          url('./weissenseediktatorlight-webfont.woff') format('woff');
//     font-weight: 100;
//     font-style: normal;
// }

// html {
//   height: 1600px!important;
//   overflow: scroll;
//   background: red;
// }
// 
// html{ bottom: 0;padding:0;margin:0}

* {
  box-sizing: border-box;
  user-select: none;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
}


body {
  // position: fixed;
  // left: 0;
  // top: 100px;
  font-family: 'Diktator';
  font-size: @grid / 4;
  margin: 0;
  padding: 0;
  -webkit-font-smoothing: antialiased;
  //letter-spacing: 0.015em;
  text-rendering: optimizeLegibility;
  //bottom: 0;
  overflow: hidden;
  height: 100vh;

}

a {
  color: inherit;
  border: 0;
  text-decoration: none;
}

html {
  overflow: hidden;
}


h1, h2, h3, h4 {
  font-weight: 400;
  margin: 0;
}

h1 {
  font-size: 2em;
  text-indent: -0.05em;
}

h2 {
  font-size: 0.8em;
}

.whiteOnAubergine {
  background: @aubergine;
  color: @white;
}

.fullscreenPage {
  width: 100vw;
  height: 100vh;
  position: absolute;
  top: 0;
  left:0;
  transition: transform 0.5s;
}

.page0 .fullscreenPage {
  transform: translateY(0vh);
}

.page1 .fullscreenPage {
  transform: translateY(-100vh);
}

.cover {
  .whiteOnAubergine;
  .fullscreenPage;

  
  h1, h2 {
    position: absolute;
    .cols(5);
    .left(0);
  }
  h1 {
    .top(9);
  }
  h2 {
    .top(9.5);
  }
}

.menu {
  top: 0;
  .whiteOnAubergine;
  z-index: 10;
  position: absolute;
  height: 100vh;
  overflow: hidden;
  transition: transform 0.5s;
  transition-timing-function: ease-in-out;
  box-shadow: 2px 0px 4px 0px rgba(50, 50, 50, 0.25);
  transform: translateZ(0);
  perspective: 900000px;
  &.collapsed  {
    .cols(6);
    transform: translate3d(-@grid*5, 0, 0);
    ul li a, .appTitle {
      display: none;
    }
  
    ul .active {
      display: block;
        font-size: 2em;
        position: absolute;
        bottom: 0px;
        left: 353px;
        transform: rotate(-90deg);
        transform-origin: 10 10;
        
        width: 15em;
    }
  }
  
  &.expanded  {
    transform: translate3d(0, 0, 0);
    .cols(6);
    .currentTitle, .menuIcon {
      display: none;
    }
  }
  
  // ul, .currentTitle, .menuIcon, .appTitle {
  //   //transition: opacity 0.25s;
  // }
  
  li {
    list-style: none;
    
    margin: 0;
    padding: 0;
  }
  li a {
    font-size: 1.4em;
  }
  

  
  ul {
    //position: absolute;
    margin: @outside-padding;
    margin-top: @outside-padding + 1.5 * @grid;
    padding: 0;
    width: 12em;
  }
  
  .appTitle {
    position: absolute;
    left: @outside-padding;
    .top(0);
    width: 10em;
  }
  .menuIcon {
    margin: @innerPadding;
    position: absolute;
    left: 340px;
    .icon {
      font-size: 3em;
      line-height: 0.8;
    }
    .icon, 
    .icon:before,
    .icon:after {
      cursor: pointer;
      border-radius: 1px;
      height: 5px;
      width: 35px;
      background: white;
      position: absolute;
      display: block;
      content: '';
      top: 10px;
    }
    .icon:before {
      top: -10px;
    }
    .icon:after {
      bottom: -10px; 
    }
    .icon, .text {
      position: relative;
    }
      
    .text {
      top: 25px;
      font-size: 1em;
    }
  }
}

.text {
  .scrollable;
  position: absolute;
  .left(3);
  .cols(2);
  .top(1);
  margin: 0em;
  height: 900px;

}


@card-height-small: 8vh;
@card-height-medium: 30vh;
@card-height-large: 60vh;

.cardView {
  .scrollable;
  margin-left: @grid;
  top: 0;
  height: 100vh;
  .cardItem {
    position: absolute;
    width: 1024 - @grid;
    transition: transform 0.5s;
    box-shadow: 0px 0px 10px 0px rgba(50, 50, 50, 0.6);
    height: @card-height-small;
    
    &.focus {
      height: 60vh;
    }
    
    img {
      width: 1024 - 5.5 * @grid;
    }
    
    .cardText {
      // FIXME
      margin-top: 1em;
    }
    
    .block {
      top: 0;
      padding: @innerPadding;
      right: 0;
      height: @card-height-large;
      .cols(4.5);
      position: absolute;
      background: lighten(@aubergine, 45);
    }
    
    .author {
      display: inline;
    }
  }
  
  .cardViewWrapper {
    position: relative;
    overflow: hidden;
  }
}


/* Define two variables as the loop limits */
@from : 0;
@to : 20;

/* Create a Parametric mixin and add a guard operation */
.loop(@index) when(@index =< @to) {
 
  /* As the mixin is called CSS is outputted */
  .cardItem:nth-child(@{index}) {
    transform: translate3d(0, (@index - 1) * @card-height-medium, 0);
  }
  
  .cardItem.beforeFocus:nth-child(@{index}) {
    transform: translate3d(0, (@index - 1) * (@card-height-small), 0);
  }
 
  .cardItem.focus:nth-child(@{index}) {
    transform: translate3d(0, (@index - 1) * (@card-height-small), 0);
  }
  
  .cardItem.afterFocus:nth-child(@{index}) {
    transform: translate3d(0, (@index - 2) * (@card-height-small) + @card-height-large, 0);
  }
    
  .cardViewWrapper.childnum@{index} {
    height: (@index) * @card-height-medium;
  }
  
  .focus .cardViewWrapper.childnum@{index} {
    height: (@index - 1) * @card-height-small + @card-height-large;
  }
  
  /* Interation call and operation */
  .loop(@index + 1);
}
 
/* the mixin is called, css outputted and iterations called */
.loop(@from);


.noTranslate{
  transform: translate3d(0,0, 0);
  transition: transform 2s ;
}

.horizontal-leave {
  display: block;
  position: absolute;
  transform: translate3d(0,0, 0);
  transition: transform 0.5s ;
}

.horizontal-leave-active {
  transform: translate3d(0, -100vh, 0);
}

.horizontal-enter {
  display: block;
  transition: transform 0.5s;
  transform: translate3d(0, 100vh, 0);
}

.horizontal-enter-active {
  transform: translate3d(0, 0vh, 0);
}

.preface {
  position:absolute;
  .top(1.5);
  .left(6.5);
  .cols(6);
}
